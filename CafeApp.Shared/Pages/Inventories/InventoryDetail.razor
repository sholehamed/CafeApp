@using CafeApp.Business.Helpers.Dtos
@using CafeApp.Business.Interfaces
@using CafeApp.Domain.Interfaces
@inject IApplicationUnit _unit;
@inject NavigationManager _navigation;
@inject INotification _notification;
@page "/dashboard/inventories/new"
@page "/dashboard/inventories/{id}"

<MudCard>
    <MudForm Model="@_model" @ref="@_form">
        <MudCardContent>
            <MudTextField @bind-Value="_model.Title"
            For="@(() => _model.Title)"
            Immediate="true"
            Label="عنوان" />

            <MudCheckBox @bind-Value="_model.IsActive"
            For="@(() => _model.IsActive)"
            Immediate="true"
            Label="وضعیت" />


        </MudCardContent>
        <MudCardContent Class="pa-0">



        </MudCardContent>
    </MudForm>
    <MudCardActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@(async () => await Submit())">ثبت</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick=Cancel>لغو</MudButton>

    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    public string Id { get; set; }

    private MudForm _form;
    private InventoryDto _model = new InventoryDto();

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Id))
            _model = await _unit.Inventories.GetById(Guid.Parse(Id));
        base.OnInitialized();
    }

    public async Task Submit()
    {
        if(string.IsNullOrEmpty(Id))
        {
            CreateInventoryParameter parameter = new CreateInventoryParameter();
            parameter = new CreateInventoryParameter { Title = _model.Title, IsActive = _model.IsActive };
            await _unit.Inventories.CreateAsync(parameter);
            _notification.NotifySuccess();
        }
        else{
            UpdateInventoryParameter parameter = new UpdateInventoryParameter();
            parameter = new UpdateInventoryParameter {Id=_model.Id, Title = _model.Title, IsActive = _model.IsActive };
            await _unit.Inventories.UpdateAsync(parameter);
            _notification.NotifySuccess();
        }
        Cancel();

    }
    public void Cancel()
    {
        _navigation.NavigateTo("/dashboard/inventories");
    }

   
}
